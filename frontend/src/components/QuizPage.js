import React, { useState } from 'react';

const QuizPage = () => {
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [score, setScore] = useState(0);
  const [showScore, setShowScore] = useState(false);
  const [selectedAnswers, setSelectedAnswers] = useState({});

  const questions = [
    {
      question: "–ß—Ç–æ —Ç–∞–∫–æ–µ —Ñ–∏—à–∏–Ω–≥?",
      options: [
        "–í–∏–¥ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π —Ä—ã–±–∞–ª–∫–∏",
        "–ö–∏–±–µ—Ä–∞—Ç–∞–∫–∞ —Å —Ü–µ–ª—å—é –ø–æ–ª—É—á–µ–Ω–∏—è –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
        "–ú–µ—Ç–æ–¥ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö",
        "–í–∏–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –≤–∏—Ä—É—Å–∞"
      ],
      correct: 1,
      explanation: "–§–∏—à–∏–Ω–≥ - —ç—Ç–æ –∫–∏–±–µ—Ä–∞—Ç–∞–∫–∞, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –∑–ª–æ—É–º—ã—à–ª–µ–Ω–Ω–∏–∫ –ø—ã—Ç–∞–µ—Ç—Å—è –≤—ã–º–∞–Ω–∏—Ç—å –ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–¥ –≤–∏–¥–æ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞."
    },
    {
      question: "–ö–∞–∫–æ–π –∏–∑ —ç—Ç–∏—Ö email-–∞–¥—Ä–µ—Å–æ–≤ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —è–≤–ª—è–µ—Ç—Å—è —Ñ–∏—à–∏–Ω–≥–æ–≤—ã–º?",
      options: [
        "security@bank-official.com",
        "support@paypal-security.com",
        "info@paypal.com",
        "no-reply@google.com"
      ],
      correct: 1,
      explanation: "–ê–¥—Ä–µ—Å 'support@paypal-security.com' –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª–µ–Ω - –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π PayPal –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–æ–º–µ–Ω @paypal.com"
    },
    {
      question: "–ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∏—Å—å–º–∞?",
      options: [
        "–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ –≤ –ø–∏—Å—å–º–µ",
        "–û—Ç–≤–µ—Ç–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é",
        "–ù–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –≤–ª–æ–∂–µ–Ω–∏—è –∏ —Å–æ–æ–±—â–∏—Ç—å –≤ –æ—Ç–¥–µ–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
        "–ü–µ—Ä–µ—Å–ª–∞—Ç—å –ø–∏—Å—å–º–æ –∫–æ–ª–ª–µ–≥–∞–º"
      ],
      correct: 2,
      explanation: "–ù–µ –æ—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –≤–ª–æ–∂–µ–Ω–∏—è –∏ —Å—Å—ã–ª–∫–∏, —Å—Ä–∞–∑—É —Å–æ–æ–±—â–∏—Ç–µ –≤ –æ—Ç–¥–µ–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏."
    },
    {
      question: "–ö–∞–∫ –æ—Ç–ª–∏—á–∏—Ç—å —Ñ–∏—à–∏–Ω–≥–æ–≤—ã–π —Å–∞–π—Ç?",
      options: [
        "–ü–æ –Ω–∞–ª–∏—á–∏—é —Ä–µ–∫–ª–∞–º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ",
        "–ü–æ –Ω–µ—Å–æ–≤–ø–∞–¥–µ–Ω–∏—é –¥–æ–º–µ–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º",
        "–ü–æ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã",
        "–ü–æ —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º–µ —Å–∞–π—Ç–∞"
      ],
      correct: 1,
      explanation: "–§–∏—à–∏–Ω–≥–æ–≤—ã–µ —Å–∞–π—Ç—ã —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –¥–æ–º–µ–Ω—ã, –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ, –Ω–æ —Å –∑–∞–º–µ–Ω–æ–π —Å–∏–º–≤–æ–ª–æ–≤."
    },
    {
      question: "–ß—Ç–æ —Ç–∞–∫–æ–µ —Ç–∞–π–ø—Å–∫–≤–æ—Ç—Ç–∏–Ω–≥?",
      options: [
        "–ë—ã—Å—Ç—Ä—ã–π –Ω–∞–±–æ—Ä —Ç–µ–∫—Å—Ç–∞",
        "–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–º–µ–Ω–æ–≤-–æ–ø–µ—á–∞—Ç–æ–∫ –¥–ª—è –æ–±–º–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
        "–ú–µ—Ç–æ–¥ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π",
        "–í–∏–¥ —Ñ–∏—à–∏–Ω–≥–∞ —á–µ—Ä–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω"
      ],
      correct: 1,
      explanation: "–¢–∞–π–ø—Å–∫–≤–æ—Ç—Ç–∏–Ω–≥ - —Å–æ–∑–¥–∞–Ω–∏–µ –¥–æ–º–µ–Ω–Ω—ã—Ö –∏–º–µ–Ω, –ø–æ—Ö–æ–∂–∏—Ö –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ, –Ω–æ —Å –æ–ø–µ—á–∞—Ç–∫–∞–º–∏."
    },
    {
      question: "–ö–∞–∫–æ–π –ø—Ä–∏–∑–Ω–∞–∫ –ù–ï —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ–Ω –¥–ª—è —Ñ–∏—à–∏–Ω–≥–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞?",
      options: [
        "–û—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏",
        "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –¥–æ–º–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è",
        "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏",
        "–ü—Ä–æ—Å—å–±–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"
      ],
      correct: 1,
      explanation: "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –¥–æ–º–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è - –ø—Ä–∏–∑–Ω–∞–∫ –ª–µ–≥–∏—Ç–∏–º–Ω–æ–≥–æ –ø–∏—Å—å–º–∞, –∞ –Ω–µ —Ñ–∏—à–∏–Ω–≥–æ–≤–æ–≥–æ."
    }
  ];

  const handleAnswerClick = (optionIndex) => {
    const newSelectedAnswers = {
      ...selectedAnswers,
      [currentQuestion]: optionIndex
    };
    setSelectedAnswers(newSelectedAnswers);

    if (optionIndex === questions[currentQuestion].correct) {
      setScore(score + 1);
    }

    const nextQuestion = currentQuestion + 1;
    if (nextQuestion < questions.length) {
      setCurrentQuestion(nextQuestion);
    } else {
      setShowScore(true);
    }
  };

  const handleRestart = () => {
    setCurrentQuestion(0);
    setScore(0);
    setShowScore(false);
    setSelectedAnswers({});
  };

  if (showScore) {
    const percentage = Math.round((score / questions.length) * 100);
    return (
      <main className="main">
        <div className="container">
          <section className="article-section">
            <div className="quiz-result">
              <h2>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞</h2>
              <div className="score-circle">
                <span className="score-percentage">{percentage}%</span>
                <span className="score-text">
                  {score} –∏–∑ {questions.length} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
                </span>
              </div>
              
              {percentage >= 80 ? (
                <div className="result-message success">
                  <h3>üéâ –û—Ç–ª–∏—á–Ω–æ!</h3>
                  <p>–í—ã –æ—Ç–ª–∏—á–Ω–æ —Ä–∞–∑–±–∏—Ä–∞–µ—Ç–µ—Å—å –≤ —Ç–µ–º–µ —Ñ–∏—à–∏–Ω–≥–∞!</p>
                </div>
              ) : percentage >= 60 ? (
                <div className="result-message warning">
                  <h3>üëç –•–æ—Ä–æ—à–æ</h3>
                  <p>–ù–µ–ø–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–æ –µ—Å—Ç—å –∫—É–¥–∞ —Ä–∞—Å—Ç–∏!</p>
                </div>
              ) : (
                <div className="result-message error">
                  <h3>üìö –ï—Å—Ç—å –Ω–∞–¥ —á–µ–º –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å</h3>
                  <p>–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∏–∑—É—á–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –µ—â–µ —Ä–∞–∑.</p>
                </div>
              )}

              <div className="answers-review">
                <h4>–†–∞–∑–±–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤:</h4>
                {questions.map((q, index) => (
                  <div key={index} className="answer-item">
                    <p><strong>–í–æ–ø—Ä–æ—Å {index + 1}:</strong> {q.question}</p>
                    <p className={`user-answer ${selectedAnswers[index] === q.correct ? 'correct' : 'incorrect'}`}>
                      –í–∞—à –æ—Ç–≤–µ—Ç: {q.options[selectedAnswers[index]]}
                    </p>
                    <p className="correct-answer">
                      –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {q.options[q.correct]}
                    </p>
                    <p className="explanation">{q.explanation}</p>
                  </div>
                ))}
              </div>

              <button onClick={handleRestart} className="restart-button">
                –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –µ—â–µ —Ä–∞–∑
              </button>
            </div>
          </section>
        </div>
      </main>
    );
  }

  return (
    <main className="main">
      <div className="container">
        <section className="article-section">
          <div className="quiz-header">
            <h2>–¢–µ—Å—Ç –ø–æ —Ñ–∏—à–∏–Ω–≥—É</h2>
            <p>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –æ —Ñ–∏—à–∏–Ω–≥–æ–≤—ã—Ö –∞—Ç–∞–∫–∞—Ö –∏ —Å–ø–æ—Å–æ–±–∞—Ö –∑–∞—â–∏—Ç—ã</p>
            <div className="quiz-progress">
              –í–æ–ø—Ä–æ—Å {currentQuestion + 1} –∏–∑ {questions.length}
            </div>
          </div>

          <div className="quiz-content">
            <div className="question-card">
              <h3>{questions[currentQuestion].question}</h3>
              <div className="options-grid">
                {questions[currentQuestion].options.map((option, index) => (
                  <button
                    key={index}
                    onClick={() => handleAnswerClick(index)}
                    className="option-button"
                  >
                    {option}
                  </button>
                ))}
              </div>
            </div>
          </div>
        </section>
      </div>
    </main>
  );
};

export default QuizPage;